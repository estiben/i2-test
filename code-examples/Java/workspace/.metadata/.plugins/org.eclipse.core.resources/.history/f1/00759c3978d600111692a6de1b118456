package com.intelligentinsites.codesamples;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpression;
import javax.xml.xpath.XPathFactory;

import org.w3c.dom.Document;
import org.w3c.dom.NodeList;

/**
 * Servlet implementation class StaffLister
 */
//@WebServlet("/StaffLister")
public class StaffLister extends HttpServlet {
	private static final long serialVersionUID = 1L;
	BasicClient inSitesConnection;

    /**
     * Default constructor. 
     */
    public StaffLister() {
        inSitesConnection = new BasicClient("localhost", "admin", "456");
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String color = request.getParameter("color");
		PrintWriter out = response.getWriter();
		
		String inSitesResponseBody = inSitesConnection.get("/api/2.0/rest/locations.xml?filter=location-level.name+eq+'Floor'");
		NodeList locationNames = parseValueFromXML(inSitesResponseBody, "//value/name");
		
		for (int node = 0; node < locationNames.getLength(); node++)
		{
			out.println(locationNames.item(node).getNodeName());
			out.println(locationNames.item(node).getTextContent());
		}
		/*out.println (
				"<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n" + 
		"<html> \n" + 
						"<head> \n" + 
		"<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\"> \n" + 
						"<title> My first jsp </title> \n" + 
		"</head> \n" + 
						"<body> \n" + 
		"<font size=\"12px\" color=\"" + color + "\">" + 
						"Hello World" + 
		"</font> \n" + 
						"</body> \n" + 
		"</html>"
						);*/
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
	}
    
    /**
     * Parses a string value from xml based on an XPath expression.
     * 
     * @param xml	the source xml document
     * @param xpath	an xpath expression
     * @return		the string value 
     */
    public NodeList parseValueFromXML(String xml, String xpath) {
        try {
            DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder docBuilder = docBuilderFactory.newDocumentBuilder();
            Document doc = docBuilder.parse(new ByteArrayInputStream(xml.getBytes()));
            
            XPathFactory factory = XPathFactory.newInstance();
            XPathExpression expr = factory.newXPath().compile(xpath);

            return (NodeList) expr.evaluate(doc, XPathConstants.NODESET);

        }
        catch (Exception e) {
            throw new RuntimeException(e);
        }
    }

}
