/*
Copyright 2012 Intelligent InSites

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package com.intelligentinsites.codesamples;


import java.util.ArrayList;

import com.intelligentinsites.codesamples.R;

import android.os.Bundle;
import android.app.Activity;
import android.view.Menu;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

public class SensorActivity extends Activity {
	
	public static ArrayList<TextView> fields;
	public static EditText editLabel;
	public static EditText hostIP;
	public static EditText userName;
	public static EditText password;
	public static EditText portNum;
	
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_sensor);
        
        fields = new ArrayList<TextView>();
        fields.add((Button) findViewById(R.id.button1));
        fields.add((Button) findViewById(R.id.button2));
        fields.add((Button) findViewById(R.id.button3));
        fields.add((Button) findViewById(R.id.button4));
        fields.add((Button) findViewById(R.id.buttonLowBatt));
        fields.add((Button) findViewById(R.id.buttonMove));
        fields.add((EditText) findViewById(R.id.editLocationId));
        
        editLabel = (EditText) findViewById(R.id.editLabel);
        editLabel.addTextChangedListener(new LabelTextWatcher());
        
        hostIP = ((EditText) findViewById(R.id.editHostIP));
        userName = ((EditText) findViewById(R.id.editUserName));
        password = ((EditText) findViewById(R.id.editPassword));
        portNum = ((EditText) findViewById(R.id.editPort));
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.activity_sensor, menu);
        return true;
    }
    
    public void btn1Press(View view) {
    	SendMessageTask task = new SendMessageTask();
    	task.execute(String.format("/?event=buttonPress&tagLabel=%s&button=1", editLabel.getText()));
    }
    
    public void btn2Press(View view) {
    	SendMessageTask task = new SendMessageTask();
    	task.execute(String.format("/?event=buttonPress&tagLabel=%s&button=2", editLabel.getText()));
    }
    
    public void btn3Press(View view) {
    	SendMessageTask task = new SendMessageTask();
    	task.execute(String.format("/?event=buttonPress&tagLabel=%s&button=3", editLabel.getText()));
    }
    
    public void btn4Press(View view) {
    	SendMessageTask task = new SendMessageTask();
    	task.execute(String.format("/?event=buttonPress&tagLabel=%s&button=4", editLabel.getText()));
    }
    
    public void btnLowBatteryPress(View view) {
    	SendMessageTask task = new SendMessageTask();
    	task.execute(String.format("/?event=lowbattery&tagLabel=%s", editLabel.getText()));
    }
    
    public void btnLocationChangePress(View view) {
    	SendMessageTask task = new SendMessageTask();
    	EditText editLocation = (EditText) findViewById(R.id.editLocationId);
    	task.execute(String.format("/?event=move&tagLabel=%s&location=%s", editLabel.getText(), editLocation.getText()));
    }
    
}

